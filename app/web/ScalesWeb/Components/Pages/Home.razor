@page "/"
@rendermode InteractiveServer

@inject IConfiguration Configuration
@inject IHttpClientFactory ClientFactory 

<PageTitle>Exercises</PageTitle>

<p>@exercise</p>
<button class="btn btn-primary" @onclick="OnRefreshClicked">Refresh</button>

@code {
    private string exercise = "";
    private string scalesApiAddress = "";

    protected override async Task OnAfterRenderAsync(bool isFirstRender)
    {
        Console.WriteLine("Initializing Weather component. Current exercise: " + exercise);

        if (isFirstRender)
        {
            scalesApiAddress = Configuration.GetSection("ApiAddresses").GetValue<string>("ScalesApi") ?? "";
            await GenerateNewExercise();
            StateHasChanged();
        }
    }

    private async Task OnRefreshClicked()
    {
        await GenerateNewExercise();
    }

    private async Task GenerateNewExercise()
    {
        using var request = new HttpRequestMessage(HttpMethod.Get, scalesApiAddress + "/exercise");
        var client = ClientFactory.CreateClient();

        using var response = await client.SendAsync(request);
        var content = await response.Content.ReadAsStringAsync();
        exercise = content;
    }
}
